apply plugin: 'com.android.application'

ext {
    AppVersionCode = 100000
    AppVersionName = "1.0.0"

    release_path="../../apk"
}
android {
    compileSdkVersion 29

    signingConfigs {
        config {
            keyAlias 'phill'
            keyPassword 'phill0626'
            storeFile file('../../../KeyStore/platform.keystore')
            storePassword 'phill0626'
        }
    }

    defaultConfig {
        applicationId "com.ph.pedometer"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.config
        }
        debug{
            signingConfig signingConfigs.config
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
}

task releaseDeploy {
    finalizedBy(){
        def name_prefix = "${rootProject.name}-${AppVersionName}"
        def release_apk = "build/outputs/apk/release"

        // APK 배포
        task(deployApk, type: Copy) {
            from "${release_apk}"
            into "${release_path}"
            rename('.*.apk', "${name_prefix}.apk")
            include('**/*release.apk')
        }
    }
}

task releaseBuild(dependsOn: ['assembleRelease']) {
}

task release(dependsOn: ['clean', 'releaseBuild', 'releaseDeploy']) {
    releaseBuild.mustRunAfter clean
    releaseDeploy.mustRunAfter releaseBuild
}